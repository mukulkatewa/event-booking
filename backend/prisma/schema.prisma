// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  name      String
  role      Role      @default(STUDENT)
  createdAt DateTime  @default(now())
  bookings  Booking[]
  clubs     Club[]
}

enum Role {
  STUDENT
  ADMIN
}

model Club {
  id          String   @id @default(uuid())
  name        String
  description String?
  logoUrl     String?
  adminId     String
  admin       User     @relation(fields: [adminId], references: [id])
  events      Event[]
  createdAt   DateTime @default(now())
}

model Event {
  id             String    @id @default(uuid())
  title          String
  description    String
  posterUrl      String?
  venue          String
  date           DateTime
  time           String
  totalSeats     Int
  availableSeats Int
  price          Float
  category       String
  status         EventStatus @default(ACTIVE)
  clubId         String
  club           Club      @relation(fields: [clubId], references: [id])
  bookings       Booking[]
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

enum EventStatus {
  ACTIVE
  CANCELLED
  COMPLETED
}

model Booking {
  id            String        @id @default(uuid())
  userId        String
  eventId       String
  user          User          @relation(fields: [userId], references: [id])
  event         Event         @relation(fields: [eventId], references: [id])
  seatNumber    String?
  bookingStatus BookingStatus @default(CONFIRMED)
  bookedAt      DateTime      @default(now())
}

enum BookingStatus {
  CONFIRMED
  CANCELLED
}